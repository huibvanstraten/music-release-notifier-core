services:
    backend:
        container_name: dmusic-release-notifier-backend
        build:
          context: .
          dockerfile: Dockerfile
        environment:
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            - POSTGRES_DB=music-release-notifier
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres

            - RABBITMQ_EXCHANGE=music_monitor
            - RABBITMQ_QUEUE=release
            - RABBITMQ_ROUTING_KEY=release_routing_key
            - CORS_ALLOWED_ORIGINS=http://localhost:4200
        ports:
          - "7070:80"
        networks:
            - local_network
        depends_on:
          - postgres
          - rabbitmq
          - keycloak

    postgres:
        image: postgres:15
        container_name: database
        ports:
            - "5432:5432"
        restart: always
        environment:
            - POSTGRES_DB=music-release-notifier
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        networks:
            - local_network

    rabbitmq:
        image: rabbitmq:4.0.5-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"

    keycloak:
        image: quay.io/keycloak/keycloak:24.0
        environment:
            KC_HOSTNAME: localhost
            KC_HOSTNAME_PORT: 7080
            KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
            KC_HEALTH_ENABLED: "true"
            KC_LOG_LEVEL: info
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
            interval: 15s
            timeout: 2s
            retries: 15
        command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
        ports:
            - "7080:7080"
            - "7443:7443"
        networks:
            - local_network
networks:
    local_network:
        driver: bridge
